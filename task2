import numpy as np
import json
import re
import torch# импортируйте torch и сохраните его версию в переменную version

version = torch.__version__# your code here

assert version is not None, 'Версия PyTorch не сохранилась в переменную version'
major_version, minor_version = re.findall("\d+\.\d+", version)[0].split('.')
assert float(major_version) >= 2 or (float(major_version) >= 1 and float(minor_version) >= 7), 'Нужно обновить PyTorch'
import torch.nn as nn
def create_model():
    NN = nn.Sequential(nn.Linear(784, 256, bias=True),
                   nn.ReLU(),
                   nn.Linear(256, 16, bias=True),
                   nn.ReLU(),
                   nn.Linear(16, 10, bias=True))

    return NN


model = create_model()

for param in model.parameters():
    nn.init.constant_(param, 1.)

assert torch.allclose(model(torch.ones((1, 784))), torch.ones((1, 10)) * 3215377.), 'Что-то не так со структурой модели'
def count_parameters(model):
    # your code here
    a = model.parameters()
    s=0
    for i in a:
      #print (i.numel())
      s+=i.numel()
    #print (s)
    #print (128*256)
    # верните количество параметров модели model
    return s# your code here

small_model = nn.Linear(128, 256)
assert count_parameters(small_model) == 128 * 256 + 256, 'ppp'

medium_model = nn.Sequential(*[nn.Linear(128, 32, bias=False), nn.ReLU(), nn.Linear(32, 10, bias=False)])
assert count_parameters(medium_model) == 128 * 32 + 32 * 10, 'Что-то не так, количество параметров неверное'
print("Seems fine!")

import torch.nn as nn
def create_model():
    NN = nn.Sequential(nn.Linear(784, 256, bias=True),
                   nn.ReLU(),
                   nn.Linear(256, 16, bias=True),
                   nn.ReLU(),
                   nn.Linear(16, 1, bias=True))

    return NN


model = create_model()
for param in model.parameters():
    nn.init.constant_(param, 1.)

assert torch.allclose(model(torch.ones((1, 784))), torch.ones((1, 10)) * 3215377.), 'Что-то не так со структурой модели'
